#!/usr/bin/python3

import argparse
import os

LEETCODE = {
    "1": "two_sum",
    "2": "add_two_numbers",
    "3": "longest_substring_without_repeating_characters",
    "4": "median_of_two_sorted_arrays",
    "5": "longest_palindromic_substring",
    "6": "zigzag_conversion",
    "7": "reverse_integer",
    "8": "string_to_integer_(atoi)",
    "9": "palindrome_number",
    "10": "regular_expression_matching",
    "11": "container_with_most_water",
    "12": "integer_to_roman",
    "13": "roman_to_integer",
    "14": "longest_common_prefix",
    "15": "3sum",
    "16": "3sum_closest",
    "17": "letter_combinations_of_a_phone_number",
    "18": "4sum",
    "19": "remove_nth_node_from_end_of_list",
    "20": "valid_parentheses",
    "21": "merge_two_sorted_lists",
    "22": "generate_parentheses",
    "23": "merge_k_sorted_lists",
    "24": "swap_nodes_in_pairs",
    "25": "reverse_nodes_in_k-group",
    "26": "remove_duplicates_from_sorted_array",
    "27": "remove_element",
    "28": "implement_strstr()",
    "29": "divide_two_integers",
    "30": "substring_with_concatenation_of_all_words",
    "31": "next_permutation",
    "32": "longest_valid_parentheses",
}


def init_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser(description="Create multiple files.")
    parser.add_argument("-p", "--problem", help="Leetcode problem name")
    return parser.parse_args()


def is_int(val: str) -> bool:
    try:
        int(val)
        return True
    except ValueError:
        return False


def write_readme(problem: str):
    with open(os.path.join(problem, "readme.md"), "w"):
        pass


def write_solution(problem, solution: str):
    tab = "    "
    template = f"class Solution:\n{tab}def {problem}():\n{tab}{tab}pass"
    with open(os.path.join(problem, solution), "w") as f:
        f.write(template)


def write_test(problem, test: str):
    tab = "    "
    template = f"import pytest\nfrom {problem}.{problem} import Solution\n\ndef test_{problem}():\n{tab}pass"
    with open(os.path.join(problem, test), "w") as f:
        f.write(template)


def create_files(problem: str):
    if is_int(problem):
        problem = LEETCODE[problem]

    os.makedirs(problem, exist_ok=True)

    solution, test = f"{problem}.py", f"{problem}_test.py"
    write_readme(problem)
    write_solution(problem, solution)
    write_test(problem, test)


if __name__ == "__main__":
    args = init_args()
    create_files(args.problem)
